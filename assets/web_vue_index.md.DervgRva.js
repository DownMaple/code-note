import{_ as e,c as t,o as r,a4 as n}from"./chunks/framework.CzSkej0V.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{"prev":false,"next":false},"headers":[],"relativePath":"web/vue/index.md","filePath":"web/vue/index.md","lastUpdated":1737262337000}'),a={name:"web/vue/index.md"},i=n('<p><a href="https://cn.vuejs.org/guide/introduction.html" target="_blank" rel="noreferrer">Vue</a> (发音为 /vjuː/，类似 view) 是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript 构建，并提供了一套声明式的、组件化的编程模型.</p><p>主要特点：</p><ul><li><strong>声明式渲染：</strong> Vue 基于标准 HTML 拓展了一套模板语法，使得我们可以声明式地描述最终输出的 HTML 和 JavaScript 状态之间的关系，降低了上手难度。</li><li><strong>响应性：</strong> 通过双向数据绑定，Vue 可以根据数据的变化自动更新 DOM。</li><li><strong>组件化：</strong> Vue 通过组件系统，将应用拆分为可复用的、模块化的代码；每个Vue组件都包含自己的视图逻辑、模板和样式。</li><li><strong>虚拟 DOM：</strong> Vue 使用虚拟 DOM 来提高性能（抽象节点树、Diff算法、批量更新、精准更新等）</li><li><strong>路由：</strong> Vue Router 是一个官方的路由库，用于在单页面应用中实现路由。</li><li><strong>状态管理：</strong> Vuex和Pinia是官方的官方状态管理库，用于在单页面应用中管理状态。</li></ul>',3),o=[i];function s(l,_,c,u,d,p){return r(),t("div",null,o)}const v=e(a,[["render",s]]);export{f as __pageData,v as default};
